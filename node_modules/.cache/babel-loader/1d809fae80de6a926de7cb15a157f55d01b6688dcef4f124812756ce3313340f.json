{"ast":null,"code":"var _jsxFileName = \"C:\\\\D\\\\Web-java2022\\\\24-hw-react-star-wars\\\\src\\\\components\\\\Contact.js\";\nimport React, { Component } from 'react';\nimport { base_url } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planets: []\n    };\n  }\n  async componentDidMount() {\n    try {\n      const response = await fetch(`${base_url}/v1/planets`);\n      const data = await response.json();\n      const planetNames = data.map(d => d.name);\n      this.setState({\n        planets: planetNames\n      });\n      console.log(this.state.planets);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fname\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"fname\",\n          name: \"firstname\",\n          placeholder: \"Your name..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lname\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lname\",\n          name: \"lastname\",\n          placeholder: \"Your last name..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\",\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"country\",\n          name: \"country\",\n          children: this.state.planets.map((planet, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: planet,\n            children: planet\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"subject\",\n          children: \"Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"subject\",\n          name: \"subject\",\n          placeholder: \"Write something..\",\n          style: {\n            height: \"200px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Contact;","map":{"version":3,"names":["React","Component","base_url","Contact","constructor","props","state","planets","componentDidMount","response","fetch","data","json","planetNames","map","d","name","setState","console","log","error","render","planet","index","height"],"sources":["C:/D/Web-java2022/24-hw-react-star-wars/src/components/Contact.js"],"sourcesContent":["import React, {Component} from 'react';\nimport {base_url} from \"../utils/constants\";\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            planets: [],\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await fetch(`${base_url}/v1/planets`);\n            const data = await response.json();\n            const planetNames = data.map(d => d.name);\n            this.setState({ planets: planetNames });\n            console.log(this.state.planets)\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"form-container\">\n                <form className=\"\">\n                    <label htmlFor=\"fname\">First Name</label>\n                    <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\" />\n\n                    <label htmlFor=\"lname\">Last Name</label>\n                    <input type=\"text\" id=\"lname\" name=\"lastname\" placeholder=\"Your last name..\" />\n\n                    <label htmlFor=\"country\">Country</label>\n                    <select id=\"country\" name=\"country\">\n                        {this.state.planets.map((planet, index) => (\n                            <option key={index} value={planet}>{planet}</option>\n                        ))}\n                    </select>\n                    <label htmlFor=\"subject\">Subject</label>\n                    <textarea id=\"subject\" name=\"subject\" placeholder=\"Write something..\" style={{height: \"200px\"}}></textarea>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Contact;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,SAAQC,QAAQ,QAAO,oBAAoB;AAAC;AAE5C,MAAMC,OAAO,SAASF,SAAS,CAAC;EAC5BG,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,OAAO,EAAE;IACb,CAAC;EACL;EAEA,MAAMC,iBAAiB,GAAG;IACtB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,QAAS,aAAY,CAAC;MACtD,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClC,MAAMC,WAAW,GAAGF,IAAI,CAACG,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC;MACzC,IAAI,CAACC,QAAQ,CAAC;QAAEV,OAAO,EAAEM;MAAY,CAAC,CAAC;MACvCK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,KAAK,CAACC,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ;EAEAC,MAAM,GAAG;IACL,oBACI;MAAK,SAAS,EAAC,gBAAgB;MAAA,uBAC3B;QAAM,SAAS,EAAC,EAAE;QAAA,wBACd;UAAO,OAAO,EAAC,OAAO;UAAA,UAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAQ,eACzC;UAAO,IAAI,EAAC,MAAM;UAAC,EAAE,EAAC,OAAO;UAAC,IAAI,EAAC,WAAW;UAAC,WAAW,EAAC;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG,eAE3E;UAAO,OAAO,EAAC,OAAO;UAAA,UAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAQ,eACxC;UAAO,IAAI,EAAC,MAAM;UAAC,EAAE,EAAC,OAAO;UAAC,IAAI,EAAC,UAAU;UAAC,WAAW,EAAC;QAAkB;UAAA;UAAA;UAAA;QAAA,QAAG,eAE/E;UAAO,OAAO,EAAC,SAAS;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAQ,eACxC;UAAQ,EAAE,EAAC,SAAS;UAAC,IAAI,EAAC,SAAS;UAAA,UAC9B,IAAI,CAACf,KAAK,CAACC,OAAO,CAACO,GAAG,CAAC,CAACQ,MAAM,EAAEC,KAAK,kBAClC;YAAoB,KAAK,EAAED,MAAO;YAAA,UAAEA;UAAM,GAA7BC,KAAK;YAAA;YAAA;YAAA;UAAA,QACrB;QAAC;UAAA;UAAA;UAAA;QAAA,QACG,eACT;UAAO,OAAO,EAAC,SAAS;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAQ,eACxC;UAAU,EAAE,EAAC,SAAS;UAAC,IAAI,EAAC,SAAS;UAAC,WAAW,EAAC,mBAAmB;UAAC,KAAK,EAAE;YAACC,MAAM,EAAE;UAAO;QAAE;UAAA;UAAA;UAAA;QAAA,QAAY,eAC3G;UAAO,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACnC;MAAA;MAAA;MAAA;IAAA,QACL;EAEd;AACJ;AAEA,eAAerB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}